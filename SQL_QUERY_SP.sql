--CREACION BASE DE DATOS

CREATE DATABASE BDNODE_API

USE BDNODE_API

--TABLA ASIGNATURAS
CREATE TABLE ASIGNATURAS (
ID INT IDENTITY(1,1),
CODIGO VARCHAR(10) PRIMARY KEY,
NOMBRE VARCHAR(30),
CREDITOS TINYINT
)

--TABLA DOCENTES
CREATE TABLE DOCENTES(
ID INT IDENTITY(1,1),
CODIGO VARCHAR(12) PRIMARY KEY,
NOMBRE VARCHAR(30),
APELLIDOS VARCHAR(40),
COD_ASIGNATURA VARCHAR(10) CONSTRAINT FK_ASIGNATURAS_01
FOREIGN KEY REFERENCES ASIGNATURAS(CODIGO)
ON UPDATE CASCADE
)

--TABLA ESTUDIANTES
CREATE TABLE ESTUDIANTES(
ID INT IDENTITY(1,1),
CODIGO VARCHAR(12) PRIMARY KEY,
NOMBRE VARCHAR(30),
APELLIDOS VARCHAR(40),
SEMESTRE VARCHAR(20),
CARRERA VARCHAR(30),
COD_ASIGNATURA VARCHAR(10) CONSTRAINT FK_ASIGNATURAS_02
FOREIGN KEY REFERENCES ASIGNATURAS(CODIGO)
ON UPDATE CASCADE
)

--TABLA RECORD ACADEMICO
CREATE TABLE RECORD_ACADEMICO(
ID INT IDENTITY(1,1),
CODIGO VARCHAR(10) PRIMARY KEY,
FECHA DATE DEFAULT GETDATE(),
PERIODO VARCHAR(20),
NOTA1 DECIMAL(3,2),
NOTA2 DECIMAL (3,2),
PROMEDIO AS CONVERT(NUMERIC (10,2),(NOTA1 + NOTA2) /2),
COD_ESTUDIANTE VARCHAR(12) CONSTRAINT FK_ESTUDIANTES_01
FOREIGN KEY REFERENCES ESTUDIANTES(CODIGO),
COD_DOCENTE VARCHAR(12) CONSTRAINT FK_DOCENTES_01
FOREIGN KEY REFERENCES DOCENTES(CODIGO)
ON UPDATE CASCADE
)


--PROCEDIMIENTO ALMACENADOS

--------------------------------------------------------------------------------ASIGNATURAS--------------------------------------------------

--MOSTRAR TODOS LOS REGISTROS DE ASIGNATURAS
CREATE PROCEDURE SP_SELECT_ASIGNATURA AS BEGIN
	SELECT * FROM ASIGNATURAS ORDER BY ID;
END

--MOSTRAR LOS REGISTROS POR ID 
CREATE PROC SP_BUSCARXID(
	@ID INT
) AS BEGIN
	SELECT * FROM ASIGNATURAS WHERE ID = @ID ORDER BY ID
END

--- INSERTAR ASIGNATURA
CREATE PROC SP_INSERTAR_ASIGNATURA(
@CODIGO VARCHAR(10),
@NOMBRE VARCHAR(30),
@CREDITOS TINYINT
)
AS
    BEGIN
        INSERT INTO ASIGNATURAS(CODIGO, NOMBRE,CREDITOS)
        VALUES(@CODIGO, @NOMBRE, @CREDITOS)
    END

--ACTUALIZAR REGISTROS

CREATE PROCEDURE SP_ACTUALIZAR_ASIGNATURA(
	@ID INT,
	@CODIGO VARCHAR(10),
	@NOMBRE VARCHAR(30),
	@CREDITOS TINYINT
) AS BEGIN
	UPDATE ASIGNATURAS SET CODIGO=@CODIGO, NOMBRE=@NOMBRE, CREDITOS=@CREDITOS WHERE ID = @ID
END


--- ELIMINAR ASIGNATURA

CREATE PROCEDURE SP_ELIMINAR_ASIGNATURA(
	@ID int
)AS BEGIN
	DELETE ASIGNATURAS WHERE ID = @ID;
END


---------------------------------------------------DOCENTES-------------------------------------------------------------------------------------

--MOSTRAR TODOS LOS REGISTROS DE DOCENTES
CREATE PROCEDURE SP_SELECT_DOCENTES AS BEGIN
	SELECT * FROM DOCENTES ORDER BY ID;
END

--MOSTRAR LOS REGISTROS POR ID 
CREATE PROC SP_BUSCARDXID(
	@ID INT
) AS BEGIN
	SELECT * FROM DOCENTES WHERE ID = @ID ORDER BY ID
END

--- INSERTAR DOCENTES
CREATE PROC SP_INSERTAR_DOCENTES(
@CODIGO VARCHAR(12),
@NOMBRE VARCHAR(30),
@APELLIDOS VARCHAR(40),
@COD_ASIGNATURA VARCHAR(10)
)
AS
    BEGIN
        INSERT INTO DOCENTES(CODIGO, NOMBRE,APELLIDOS,COD_ASIGNATURA)
        VALUES(@CODIGO, @NOMBRE, @APELLIDOS,@COD_ASIGNATURA)
    END

--ACTUALIZAR REGISTROS DE DOCENTE

CREATE PROCEDURE SP_ACTUALIZAR_DOCENTE(
	@ID INT,
	@CODIGO VARCHAR(10),
	@NOMBRE VARCHAR(30),
	@APELLIDOS VARCHAR(40),
	@COD_ASIGNATURA VARCHAR(10)


) AS BEGIN
	UPDATE DOCENTES SET CODIGO=@CODIGO, NOMBRE=@NOMBRE, APELLIDOS=@APELLIDOS, COD_ASIGNATURA=@COD_ASIGNATURA WHERE ID = @ID
END

--- ELIMINAR DOCENTES

CREATE PROCEDURE SP_ELIMINAR_DOCENTES(
	@ID int
)AS BEGIN
	DELETE DOCENTES WHERE ID = @ID;
END

---------------------------------------------------------ESTUDIANTES---------------------------------------------------------------------

--MOSTRAR TODOS LOS REGISTROS DE ESTUDIANTES
CREATE PROCEDURE SP_SELECT_ESTUDIANTES AS BEGIN
	SELECT * FROM ESTUDIANTES ORDER BY ID;
END

--MOSTRAR LOS REGISTROS POR ID 
CREATE PROC SP_BUSCAREXID(
	@ID INT
) AS BEGIN
	SELECT * FROM ESTUDIANTES WHERE ID = @ID ORDER BY ID
END

--- INSERTAR ESTUDIANTES
CREATE PROC SP_INSERTAR_ESTUDIANTES(
@CODIGO VARCHAR(12),
@NOMBRE VARCHAR(30),
@APELLIDOS VARCHAR(40),
@SEMESTRE VARCHAR(20),
@CARRERA VARCHAR(30),
@COD_ASIGNATURA VARCHAR(10)
)
AS
    BEGIN
        INSERT INTO ESTUDIANTES(CODIGO, NOMBRE,APELLIDOS,SEMESTRE,CARRERA,COD_ASIGNATURA)
        VALUES(@CODIGO, @NOMBRE, @APELLIDOS,@SEMESTRE,@CARRERA,@COD_ASIGNATURA)
    END

--ACTUALIZAR REGISTROS DE ESTUDIANTE

CREATE PROCEDURE SP_ACTUALIZAR_ESTUDIANTE(
	@ID INT,
	@CODIGO VARCHAR(12),
	@NOMBRE VARCHAR(30),
	@APELLIDOS VARCHAR(40),
	@SEMESTRE VARCHAR(20),
	@CARRERA VARCHAR(30),
	@COD_ASIGNATURA VARCHAR(10)


) AS BEGIN
	UPDATE ESTUDIANTES SET CODIGO=@CODIGO, NOMBRE=@NOMBRE, APELLIDOS=@APELLIDOS, SEMESTRE=@SEMESTRE, CARRERA=@CARRERA, COD_ASIGNATURA=@COD_ASIGNATURA WHERE ID = @ID
END

--- ELIMINAR ESTUDIANTES

CREATE PROCEDURE SP_ELIMINAR_ESTUDIANTES(
	@ID int
)AS BEGIN
	DELETE ESTUDIANTES WHERE ID = @ID;
END

-----------------------------------------------------------RECORD ACADEMICO--------------------------------------

--MOSTRAR TODOS LOS REGISTROS DE RECORD ACADEMICO
CREATE PROCEDURE SP_SELECT_RACADEMICO AS BEGIN
	SELECT * FROM RECORD_ACADEMICO ORDER BY ID;
END

--MOSTRAR LOS REGISTROS POR ID 
CREATE PROC SP_BUSCARRAXID(
	@ID INT
) AS BEGIN
	SELECT * FROM RECORD_ACADEMICO WHERE ID = @ID ORDER BY ID
END

--INSERTAR RECORD ACADEMICO
CREATE PROC SP_INSERTAR_RACADEMICO(
@CODIGO VARCHAR(10),
@PERIODO VARCHAR(20),
@COD_ESTUDIANTE VARCHAR(12),
@COD_DOCENTE VARCHAR(12),
@NOTA1 DECIMAL,
@NOTA2 DECIMAL
)
AS
    BEGIN
        INSERT INTO RECORD_ACADEMICO(CODIGO, PERIODO,COD_ESTUDIANTE,COD_DOCENTE,NOTA1,NOTA2)
        VALUES(@CODIGO, @PERIODO, @COD_ESTUDIANTE,@COD_DOCENTE,@NOTA1,@NOTA2)
    END

--ACTUALIZAR RECORD 
CREATE PROCEDURE SP_ACTUALIZAR_RACADEMICO(
	@ID INT,
	@CODIGO VARCHAR(10),
	@PERIODO VARCHAR(20),
	@COD_ESTUDIANTE VARCHAR(12),
	@COD_DOCENTE VARCHAR(12),
	@NOTA1 DECIMAL,
	@NOTA2 DECIMAL


) AS BEGIN
	UPDATE RECORD_ACADEMICO SET CODIGO=@CODIGO, PERIODO=@PERIODO, COD_ESTUDIANTE=@COD_ESTUDIANTE, @COD_DOCENTE=@COD_DOCENTE, NOTA1=@NOTA1, NOTA2=@NOTA2 WHERE ID = @ID
END

--- ELIMINAR RECORD ACADEMICO
CREATE PROCEDURE SP_ELIMINAR_RACADEMICO(
	@ID int
)AS BEGIN
	DELETE RECORD_ACADEMICO WHERE ID = @ID;
END
